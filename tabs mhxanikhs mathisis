from sklearn.model_selection import train_test_split
from sklearn.neighbors import KNeighborsClassifier
from sklearn.svm import SVC
from sklearn.metrics import accuracy_score

def knn_classification(data):
X_train,X_test,y_train,y_test = train_test_split(data.iloc[:,:-1], data.iloc[:, -1], test_size=0.3, random_state=42)
k = st.sidebar.slider('k', 1, 15, 5)
    knn = KNeighborsClassifier(n_neighbors=k)
    knn.fit(X_train, y_train)
    y_pred = knn.predict(X_test)
    accuracy = accuracy_score(y_test, y_pred)
    st.write(f'k-NN Accuracy: {accuracy:.2f}')
def svm_classification(data):
    X_train, X_test, y_train, y_test = train_test_split(data.iloc[:, :-1], data.iloc[:, -1], test_size=0.3, random_state=42)
    c = st.sidebar.slider('C', 0.1, 10.0, 1.0)
    svm = SVC(C=c)
    svm.fit(X_train, y_train)
    y_pred = svm.predict(X_test)
    accuracy = accuracy_score(y_test, y_pred)
    st.write(f'SVM Accuracy: {accuracy:.2f}')
if uploaded_file is not None:
    st.header("Classification")
    classification_option = st.selectbox("Select a classification algorithm", ["k-NN", "SVM"])
    if classification_option == "k-NN":
        knn_classification(data)
    elif classification_option == "SVM":
        svm_classification(data)
